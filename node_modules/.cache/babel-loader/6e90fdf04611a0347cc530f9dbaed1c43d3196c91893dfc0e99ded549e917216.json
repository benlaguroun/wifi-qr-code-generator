{"ast":null,"code":"import React,{useState}from\"react\";import QRCode from\"qrcode\";import\"./QRCodeGenerator.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QRCodeGenerator=()=>{const[ssid,setSsid]=useState(\"\");const[password,setPassword]=useState(\"\");const[encryption,setEncryption]=useState(\"WPA\");const[qrCodeDataUrl,setQrCodeDataUrl]=useState(\"\");// Function to generate QR code\nconst generateQRCode=async()=>{if(!ssid.trim()){alert(\"SSID is required to generate a QR code.\");return;}if(encryption!==\"\"&&password.length<8){alert(\"Password must be at least 8 characters for secure encryption.\");return;}// Wi-Fi QR Code String\nconst wifiString=\"WIFI:T:\".concat(encryption,\";S:\").concat(ssid,\";P:\").concat(password,\";H:;\");try{const dataUrl=await QRCode.toDataURL(wifiString);// Generate QR Code\nsetQrCodeDataUrl(dataUrl);}catch(error){console.error(\"Error generating QR Code: \",error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"qr-generator-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Wi-Fi QR Code Generator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Wi-Fi SSID\",value:ssid,onChange:e=>setSsid(e.target.value),className:\"input\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter Wi-Fi Password\",value:password,onChange:e=>setPassword(e.target.value),className:\"input\"}),/*#__PURE__*/_jsxs(\"select\",{value:encryption,onChange:e=>setEncryption(e.target.value),className:\"select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"WPA\",children:\"WPA/WPA2\"}),/*#__PURE__*/_jsx(\"option\",{value:\"WEP\",children:\"WEP\"}),/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"None\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:generateQRCode,className:\"generate-btn\",children:\"Generate QR Code\"})]}),qrCodeDataUrl&&/*#__PURE__*/_jsxs(\"div\",{className:\"qr-code-display\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Wi-Fi QR Code:\"}),/*#__PURE__*/_jsx(\"img\",{src:qrCodeDataUrl,alt:\"Generated QR Code\"}),/*#__PURE__*/_jsx(\"a\",{href:qrCodeDataUrl,download:\"wifi-qr-code.png\",className:\"download-btn\",children:\"Download QR Code\"})]})]});};export default QRCodeGenerator;","map":{"version":3,"names":["React","useState","QRCode","jsx","_jsx","jsxs","_jsxs","QRCodeGenerator","ssid","setSsid","password","setPassword","encryption","setEncryption","qrCodeDataUrl","setQrCodeDataUrl","generateQRCode","trim","alert","length","wifiString","concat","dataUrl","toDataURL","error","console","className","children","type","placeholder","value","onChange","e","target","onClick","src","alt","href","download"],"sources":["/Users/mohamedben/Desktop/wifi-qr-code-generator/src/components/QRCodeGenerator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport QRCode from \"qrcode\";\nimport \"./QRCodeGenerator.css\";\n\nconst QRCodeGenerator = () => {\n  const [ssid, setSsid] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [encryption, setEncryption] = useState(\"WPA\");\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState(\"\");\n\n  // Function to generate QR code\n  const generateQRCode = async () => {\n    if (!ssid.trim()) {\n      alert(\"SSID is required to generate a QR code.\");\n      return;\n    }\n\n    if (encryption !== \"\" && password.length < 8) {\n      alert(\"Password must be at least 8 characters for secure encryption.\");\n      return;\n    }\n\n    // Wi-Fi QR Code String\n    const wifiString = `WIFI:T:${encryption};S:${ssid};P:${password};H:;`;\n\n    try {\n      const dataUrl = await QRCode.toDataURL(wifiString); // Generate QR Code\n      setQrCodeDataUrl(dataUrl);\n    } catch (error) {\n      console.error(\"Error generating QR Code: \", error);\n    }\n  };\n\n  return (\n    <div className=\"qr-generator-container\">\n      <h1 className=\"title\">Wi-Fi QR Code Generator</h1>\n      <div className=\"form-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter Wi-Fi SSID\"\n          value={ssid}\n          onChange={(e) => setSsid(e.target.value)}\n          className=\"input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Enter Wi-Fi Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"input\"\n        />\n        <select\n          value={encryption}\n          onChange={(e) => setEncryption(e.target.value)}\n          className=\"select\"\n        >\n          <option value=\"WPA\">WPA/WPA2</option>\n          <option value=\"WEP\">WEP</option>\n          <option value=\"\">None</option>\n        </select>\n        <button onClick={generateQRCode} className=\"generate-btn\">\n          Generate QR Code\n        </button>\n      </div>\n\n      {/* Display the generated QR Code */}\n      {qrCodeDataUrl && (\n        <div className=\"qr-code-display\">\n          <h2>Your Wi-Fi QR Code:</h2>\n          <img src={qrCodeDataUrl} alt=\"Generated QR Code\" />\n          <a\n            href={qrCodeDataUrl}\n            download=\"wifi-qr-code.png\"\n            className=\"download-btn\"\n          >\n            Download QR Code\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRCodeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}