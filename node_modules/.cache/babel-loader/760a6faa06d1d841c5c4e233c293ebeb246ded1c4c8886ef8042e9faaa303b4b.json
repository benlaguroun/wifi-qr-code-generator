{"ast":null,"code":"var _jsxFileName = \"/Users/mohamedben/Desktop/wifi-qr-code-generator/frontend/src/components/QRCodeGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport QRCode from \"qrcode\";\nimport \"./QRCodeGenerator.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = () => {\n  _s();\n  const [ssid, setSsid] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [encryption, setEncryption] = useState(\"WPA\");\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState(\"\");\n  const generateQRCode = async () => {\n    if (!ssid) {\n      alert(\"SSID is required to generate a QR code.\");\n      return;\n    }\n\n    // Construct the Wi-Fi QR code string\n    const wifiString = `WIFI:T:${encryption};S:${ssid};P:${password};H:;`;\n    try {\n      // Generate the QR code data URL\n      const dataUrl = await QRCode.toDataURL(wifiString);\n      setQrCodeDataUrl(dataUrl);\n    } catch (error) {\n      console.error(\"Error generating QR Code: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-generator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Wi-Fi QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Wi-Fi SSID\",\n        value: ssid,\n        onChange: e => setSsid(e.target.value),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter Wi-Fi Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: encryption,\n        onChange: e => setEncryption(e.target.value),\n        className: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"WPA\",\n          children: \"WPA/WPA2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"WEP\",\n          children: \"WEP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateQRCode,\n        className: \"generate-btn\",\n        children: \"Generate QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), qrCodeDataUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qr-code-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Wi-Fi QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrCodeDataUrl,\n        alt: \"Generated QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeGenerator, \"fy1NRo0grgZ5TdWxoFKZjvTq3OY=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["React","useState","QRCode","jsxDEV","_jsxDEV","QRCodeGenerator","_s","ssid","setSsid","password","setPassword","encryption","setEncryption","qrCodeDataUrl","setQrCodeDataUrl","generateQRCode","alert","wifiString","dataUrl","toDataURL","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/mohamedben/Desktop/wifi-qr-code-generator/frontend/src/components/QRCodeGenerator.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport QRCode from \"qrcode\";\nimport \"./QRCodeGenerator.css\";\n\nconst QRCodeGenerator = () => {\n  const [ssid, setSsid] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [encryption, setEncryption] = useState(\"WPA\");\n  const [qrCodeDataUrl, setQrCodeDataUrl] = useState(\"\");\n\n  const generateQRCode = async () => {\n    if (!ssid) {\n      alert(\"SSID is required to generate a QR code.\");\n      return;\n    }\n\n    // Construct the Wi-Fi QR code string\n    const wifiString = `WIFI:T:${encryption};S:${ssid};P:${password};H:;`;\n\n    try {\n      // Generate the QR code data URL\n      const dataUrl = await QRCode.toDataURL(wifiString);\n      setQrCodeDataUrl(dataUrl);\n    } catch (error) {\n      console.error(\"Error generating QR Code: \", error);\n    }\n  };\n\n  return (\n    <div className=\"qr-generator-container\">\n      <h1 className=\"title\">Wi-Fi QR Code Generator</h1>\n      <div className=\"form-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter Wi-Fi SSID\"\n          value={ssid}\n          onChange={(e) => setSsid(e.target.value)}\n          className=\"input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Enter Wi-Fi Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"input\"\n        />\n        <select\n          value={encryption}\n          onChange={(e) => setEncryption(e.target.value)}\n          className=\"select\"\n        >\n          <option value=\"WPA\">WPA/WPA2</option>\n          <option value=\"WEP\">WEP</option>\n          <option value=\"\">None</option>\n        </select>\n        <button onClick={generateQRCode} className=\"generate-btn\">\n          Generate QR Code\n        </button>\n      </div>\n\n      {/* Display the generated QR Code */}\n      {qrCodeDataUrl && (\n        <div className=\"qr-code-display\">\n          <h2>Your Wi-Fi QR Code:</h2>\n          <img src={qrCodeDataUrl} alt=\"Generated QR Code\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRCodeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}